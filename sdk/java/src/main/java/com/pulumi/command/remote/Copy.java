// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.command.remote;

import com.pulumi.asset.Archive;
import com.pulumi.asset.AssetOrArchive;
import com.pulumi.command.Utilities;
import com.pulumi.command.remote.CopyArgs;
import com.pulumi.command.remote.outputs.Connection;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Copy an Asset or Archive to a remote host.
 * 
 */
@ResourceType(type="command:remote:Copy")
public class Copy extends com.pulumi.resources.CustomResource {
    /**
     * The parameters with which to connect to the remote host.
     * 
     */
    @Export(name="connection", refs={Connection.class}, tree="[0]")
    private Output<Connection> connection;

    /**
     * @return The parameters with which to connect to the remote host.
     * 
     */
    public Output<Connection> connection() {
        return this.connection;
    }
    /**
     * An archive to upload. It must be a path based archive. Only one of LocalAsset or LocalArchive can be set.
     * 
     */
    @Export(name="localArchive", refs={Archive.class}, tree="[0]")
    private Output</* @Nullable */ Archive> localArchive;

    /**
     * @return An archive to upload. It must be a path based archive. Only one of LocalAsset or LocalArchive can be set.
     * 
     */
    public Output<Optional<Archive>> localArchive() {
        return Codegen.optional(this.localArchive);
    }
    /**
     * An asset to upload. It must be a path based asset. Only one of LocalAsset or LocalArchive can be set.
     * 
     */
    @Export(name="localAsset", refs={AssetOrArchive.class}, tree="[0]")
    private Output</* @Nullable */ AssetOrArchive> localAsset;

    /**
     * @return An asset to upload. It must be a path based asset. Only one of LocalAsset or LocalArchive can be set.
     * 
     */
    public Output<Optional<AssetOrArchive>> localAsset() {
        return Codegen.optional(this.localAsset);
    }
    /**
     * The destination path in the remote host.
     * 
     */
    @Export(name="remotePath", refs={String.class}, tree="[0]")
    private Output<String> remotePath;

    /**
     * @return The destination path in the remote host.
     * 
     */
    public Output<String> remotePath() {
        return this.remotePath;
    }
    /**
     * Trigger replacements on changes to this input.
     * 
     */
    @Export(name="triggers", refs={List.class,Object.class}, tree="[0,1]")
    private Output</* @Nullable */ List<Object>> triggers;

    /**
     * @return Trigger replacements on changes to this input.
     * 
     */
    public Output<Optional<List<Object>>> triggers() {
        return Codegen.optional(this.triggers);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Copy(String name) {
        this(name, CopyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Copy(String name, CopyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Copy(String name, CopyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("command:remote:Copy", name, args == null ? CopyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Copy(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("command:remote:Copy", name, null, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "connection"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Copy get(String name, Output<String> id, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Copy(name, id, options);
    }
}
